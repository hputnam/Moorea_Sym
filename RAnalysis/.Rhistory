Rel.Genus.Clade.Data.Stack # view data
colnames(Rel.Genus.Clade.Data.Stack) <- c("Genus", "Count", "Clade")
Fig5 <- ggplot(Rel.Genus.Clade.Data.Stack, aes(x=Genus, y=Count, fill = Clade)) + #plot clade data with frequency count as Y and clade as X
geom_bar(stat = "identity") + # plot bars
xlab("Clade") + # label X axis
ylab("Relative Abundance") # label Y axis
########################################################################################
Fig1
Fig2
Fig3
Fig4
Fig5
########################################################################################
##load table
# Sample.Data <- read.csv("20140214_RelAbun_Sample_By_Clade.csv", header=TRUE, sep=",")  #read in sym clade data with sample ID
#
# #plot stacked bar chart of relative abundances by sample
# ggplot(data = Sample.Data, aes(x = Genus, y = Rel.Abun, fill = Clade)) +
#   geom_bar() +
#   theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
#   xlab("Sample") +
#   ylab("Relative Abundance")
########################################################################################
# Subclade Data
########################################################################################
Envt.Data <- read.csv("20140214_Envt_Data.csv", header=TRUE, sep=",")  #read in environmental data with sample metadata
Sym.OTU.Data <- read.csv("20140218_Final_Moorea_data.csv", header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
head(Sym.OTU.Data) #view header
rownames(Sym.OTU.Data) #view row names
colnames(Sym.OTU.Data) #view column names
sample.names <-Sym.OTU.Data[,1] # identify the sample names
sample.names # view the sample names
Sym.Data <- Sym.OTU.Data[,-1] # subtract the information columns and retain the OTU data columns
Sym.Data # view the data
Rel.Sym.Data <- Sym.Data/rowSums(Sym.Data) #Relative Abundance
N <- rowSums(Rel.Sym.Data) # calculate row sums
N #Display Row Sums
#### Transform Relative Abundance Matrix using sqrt
Trans.Rel.Sym.Data <- sqrt(Rel.Sym.Data) #sqrt transform the matrix
Trans.Rel.Sym.Data #view data
#####Calculate and Plot MDS
MDS <-metaMDS(Trans.Rel.Sym.Data, distance = "bray") # calculate the spatial similarity of samples using bray curtis dissimilarity of symbiont assemblages
Fig7 <- plot(MDS) #plot the NMDS
points(MDS, "sites", pch = 17, col = "cyan", select = Envt.Data$Species ==
"Acropora") # plot the Acropora samples in green
points(MDS, "sites", pch = 19, col = "darkorchid", select = Envt.Data$Species ==
"Porites") # plot the Porites samples in blue
coral.genus <- c(pch=17, pch=19) # set the symbols 17=triangle for Acropora, 19=circle for Porites
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Species), bty = "n", pch = coral.genus)) # add legend in the top right for the Genera
MDS.Results <-summary(MDS$stress)
Genus.ANOSIM.Results <- anosim(Trans.Rel.Sym.Data, Envt.Data$Species, permutations = 999, distance = "bray") #Run the ANOSIM test on bray curtis distance using 999 permutations
##############Simper analysis##############
Simper <- with(Envt.Data, simper(Trans.Rel.Sym.Data, Species)) #run SIMPER analysis to determine Symbiodinium "type" contributions to the differences between Coral Genera
Simper.analysis <-summary(Simper) #save the SIMPER summary
sink("SIMPER_Results.txt"); print(Simper.analysis);sink() #save the SIMPER summary to file
################################ Heat Maps #####################################
#A heatmap is a scale colour image for representing the observed values of two or more conditions, treatments, populations, etc.
#Use Rel.Sym.Data as OTU table
#Use Envt.Data
## examine OTU
class(Rel.Sym.Data)  # what type of object is it?
colnames(Rel.Sym.Data)  # what are the names of the columns / fields?
Rel.Sym.Data <- as.matrix(Rel.Sym.Data) #classify the data as a matrix
rowSums(Rel.Sym.Data) # check to see if rows sum to 1
## examine enviornmental data
class(Envt.Data)  # what type of object is it?
colnames(Envt.Data)  # what are the names of the columns / fields?
attach(Envt.Data)  # attached Envt.Data
# simple bar chart of the types per sample
Fig8 <- barplot(t(Rel.Sym.Data), xlab="SampleName", ylab="Relative Abundance", las=2) #stacked barchart of the relative abundances of the "types" per sample
#with(Envt.Data, legend("topright", legend = colnames(Rel.Sym.Data))) # add legend in the top right for the Genera
scale <- colorRampPalette(c("black", "green", "yellow")) # Set the colors that represent 0 to 1 (black, green, yellow)
Fig9 <-heatmap.2(Rel.Sym.Data,
#dendrogram information
Rowv = TRUE,
Colv=NA,
distfun = dist,
hclustfun = hclust,
dendrogram = "row",
symm = FALSE,
col=scale,
labRow = Species,
labCol = NULL,
key = TRUE,
keysize = 3,
density.info="none",
denscol=tracecol,
trace="none",
scale="none")
## heat map is crazy and you can't see anything but the largest signals
# sort by relative abundace of OTUs and remove those <1%
Sym.Data #view data
dim(Sym.Data) #view dimensions of data # dim() returns c(row_count, column_count),
Top.OTUs <-t(Sym.Data) #transpose the data
Top.OTUs <-as.data.frame(Top.OTUs) #change it to a dataframe
Top.OTUs[,59]  <- rowSums(Top.OTUs)  # Add a new column that is the total abundance of each row
colnames(Top.OTUs)  # Check your column names
colnames(Top.OTUs)[59] <- "Total"  # Fix the new column name
colnames(Top.OTUs)  # Check again
sort(Top.OTUs$Total, decreasing=TRUE)  # Sort based on decreasing Total, and returns the values
order(Top.OTUs$Total, decreasing=TRUE)  # Sort based on decreasing Total, but returns the indices
sortedTop.OTUs <- Top.OTUs[ order(Top.OTUs$Total, decreasing=TRUE) , ]  # Use the ordered indices to sort the data.frame (taxaRel is object $Total is column)
Top.50 <- sortedTop.OTUs[1:50,]  # Take the first 50 rows (most abundant taxa >0.1%) and all of the columns (samples)
Top.50 <- Top.50[ , 1:dim(Top.50)[2] - 1 ]  # include all rows, and all but the last column = column count - 1
Top.50 #view dataset of top OTUs
RelAbun <- t(Top.50) #transpose dataset to calculate relative abundance
RelAbun <- as.matrix(RelAbun) #classify dataset as a matrix
RelAbun <- RelAbun/rowSums(RelAbun) #calculate relative abundance of the rows (samples)
rowSums(RelAbun) #check to see if row sums each add to 1
topOTUs <- colnames(RelAbun) #Identify the OTU names of the top taxa
topOTUs # view data
Species   #view the Species
scale <- colorRampPalette(c("black", "green", "yellow")) # Set the colors that represent 0 to 1 (black, green, yellow)
Fig10 <- heatmap.2(RelAbun,
#dendrogram information
Rowv = TRUE,
Colv=NA,
distfun = dist,
hclustfun = hclust,
dendrogram = "row",
symm = FALSE,
col=scale,
labRow = Species,
labCol = NULL,
key = TRUE,
keysize = 3,
density.info="none",
denscol=tracecol,
trace="none",
scale="none")
########################ORDINATION ANALYSIS############################
#### DCA on transformed relative abundance data visualizing the Coral samples
Sym.Trans.Rel.dca <- decorana(Trans.Rel.Sym.Data) # run the detrended correspondence analysis on the transformed relative abundance data
Fig11 <-plot(Sym.Trans.Rel.dca, disp="sites",  type="n") #plot the dca site scores
points(Sym.Trans.Rel.dca, "sites", pch = 17, col = "green", select = Envt.Data$Species ==
"Acropora") #label the Acropora green
points(Sym.Trans.Rel.dca, "sites", pch = 19, col = "blue", select = Envt.Data$Species ==
"Porites") #label the Porites blue
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Species), bty = "n", pch = coral.genus)) #add a legend
Sym.Trans.Rel.dca #view results
DCA.Summary <-summary(Sym.Trans.Rel.dca) #view the DCA summary
Fig12 <-plot(Sym.Trans.Rel.dca, disp="sites",  type="n") #plot the DCA by sampling sites
Site.colors <- c("lightblue","darkblue","blue","red","salmon", "pink") # choose the site colors
points(Sym.Trans.Rel.dca, choices=c(1,2), by=levels(Envt.Data$Site), col=Site.colors, pch=16) #plot the points from the results of the first 2 coumns (site scores)
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Site), bty = "n", col=Site.colors, pch=16)) # add a legend to identify the sites
###Subset to Acropora only for envt data
Envt.Data #view data
Acropora.IDs <- Envt.Data[which(Envt.Data$Species=="Acropora"),] # subset the Acropora Envt Data
Acropora.IDs # view data
dim(Acropora.IDs) #view dimensions
#### DCA on transformed relative abundance data For Acropora Only
Acrop.Sym.OTU.Data <- read.csv("20140219_Final_Acropora_data.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Acrop.Sym.OTU.Data #view data
Rel.Acrop.Data <- Acrop.Sym.OTU.Data/rowSums(Acrop.Sym.OTU.Data) #Calculate Relative Abundance
Acrop.N <- rowSums(Rel.Acrop.Data) # calculate row sums
Acrop.N #Display Row Sums
#### Transform Relative Abundance Matrix using sqrt
Trans.Rel.Acrop.Data <- sqrt(Rel.Acrop.Data) #sqrt transform the relative abundance matrix
Trans.Rel.Acrop.Data #view data
Acrop.Trans.Rel.dca <- decorana(Trans.Rel.Acrop.Data) # Calculate DCA
Fig13 <-plot(Acrop.Trans.Rel.dca, disp="sites",  type="n")
Site.colors <- c("lightblue","darkblue","blue", "red","salmon", "pink")
points(Acrop.Trans.Rel.dca, choices=c(1,2), by=levels(Acropora.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("topleft", legend = levels(Acropora.IDs$Site), bty = "n", col=Site.colors, pch=16))
###Subset to Porites only for envt data
Porites.IDs <- Envt.Data[which(Envt.Data$Species=="Porites"),] # subset the Porites Envt Data
Porites.IDs  #view data
dim(Porites.IDs) #dimensions of data
#### DCA on transformed relative abundance data For Porites Only
Porites.Sym.OTU.Data <- read.csv("20140219_Final_Porites_data.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Porites.Sym.OTU.Data #view data
Rel.Porites.Data <- Porites.Sym.OTU.Data/rowSums(Porites.Sym.OTU.Data) #Calculate Relative Abundance
Porites.N <- rowSums(Rel.Porites.Data) # calculate row sums
Porites.N #Display Row Sums
#### Transform Relative Abundance Matrix using sqrt
Trans.Rel.Porites.Data <- sqrt(Rel.Porites.Data) #sqrt transform the rel abundance matrix
Trans.Rel.Porites.Data
Porites.Trans.Rel.dca <- decorana(Trans.Rel.Porites.Data) # Calculate DCA
Fig14 <-plot(Porites.Trans.Rel.dca, disp="sites",  type="n")
Site.colors <- c("lightblue","darkblue","dodgerblue", "red","salmon", "pink")
points(Porites.Trans.Rel.dca, choices=c(1,2), by=levels(Porites.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("bottomright", legend = levels(Porites.IDs$Site), bty = "n", col=Site.colors, pch=16))
#### Acropora CCA on transformed relative abundance data
Trans.Rel.Acrop.Data.cca <- cca(Trans.Rel.Acrop.Data ~ DMean + DRange, data=Acropora.IDs)
anova(Trans.Rel.Acrop.Data.cca)
anova(Trans.Rel.Acrop.Data.cca, by="terms")
Acrop.CCA.summary <- summary(Trans.Rel.Acrop.Data.cca)
#Plotting Acropora CCA
Fig15 <- plot(Trans.Rel.Acrop.Data.cca,  xlim=)
points(Trans.Rel.Acrop.Data.cca, by=levels(Acropora.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("topleft", legend = levels(Acropora.IDs$Site), bty = "n", col=Site.colors, pch=16))
#### Porites CCA on transformed relative abundance data
Trans.Rel.Porites.Data.cca <- cca(Trans.Rel.Porites.Data ~ DMean + DRange, data=Porites.IDs)
anova(Trans.Rel.Porites.Data.cca)
anova(Trans.Rel.Porites.Data.cca, by="terms")
Por.CCA.summary <- summary(Trans.Rel.Porites.Data.cca)
#Plotting Acropora CCA
Fig16 <- plot(Trans.Rel.Porites.Data.cca,  xlim=)
points(Trans.Rel.Porites.Data.cca, by=levels(Porites.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("topleft", legend = levels(Porites.IDs$Site), bty = "n", col=Site.colors, pch=16))
MDS
Cld.Data <- read.csv("clade_levle.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Cld.Data #view data
Read in libraries
library("ggplot2") #load ggplot2
library("vegan") #load vegan
library("gplots") #load gplots
#############################################################
#Set working directory and read in temp data for processing
mainDir <- '/Users/hputnam/Publications/In_Prep/Primary/3_Moorea_NGS/RAnalysis' #path on local computer
setwd(file.path(mainDir, 'Data')) #changes working directory to data
Cld.Data <- read.csv("clade_levle.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Cld.Data #view data
Cld.Data <- read.csv("clade_level.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Cld.Data #view data
Rel.Cld.Data <- Cld.Data/rowSums(Cld.Data) #Calculate Relative Abundance
cld.N <- rowSums(Rel.Porites.Data) # calculate row sums
cld.N #Display Row Sums
Cld.Data
Cld.Data <- read.csv("clade_level.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Cld.Data #view data
Cld.Data <-Rel.Cld.Data[,-1:-2]
Cld.Data
Cld.Data
Cld.Data <-Cld.Data[,-1:-2]
Cld.Data
Rel.Cld.Data <- Cld.Data/rowSums(Cld.Data) #Calculate Relative Abundance
cld.N <- rowSums(Rel.Porites.Data) # calculate row sums
cld.N #Display Row Sums
Rel.Cld.Data
Trans.Rel.Cld.Data <- sqrt(Rel.Cld.Data) #sqrt transform the rel abundance matrix
Trans.Rel.Cld.Data
clade.dca <- decorana(Trans.Rel.Cld.Data) # run the detrended correspondence analysis on the transformed relative abundance data
Fig11 <-plot(clade.dca, disp="sites",  type="n") #plot the dca site scores
points(clade.dca, "sites", pch = 17, col = "green", select = Envt.Data$Species ==
"Acropora") #label the Acropora green
points(clade.dca, "sites", pch = 19, col = "blue", select = Envt.Data$Species ==
"Porites") #label the Porites blue
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Species), bty = "n", pch = coral.genus)) #add a legend
clade.dca #view results
DCA.Summary <-summary(clade.dca) #view the DCA summary
clade.cca <- cca(Trans.Rel.Cld.Data ~ DMean + DRange, data=Porites.IDs)
anova(clade.cca)
anova(clade.cca, by="terms")
Clade.CCA.summary <- summary(clade.cca)
clade.cca <- cca(Trans.Rel.Cld.Data ~ DMean + DRange, data=Envt.Data)
anova(clade.cca)
anova(clade.cca, by="terms")
Clade.CCA.summary <- summary(clade.cca)
########################################################################################
#Copyright 2014 HM Putnam
#Use of this code must be accompanied by a citation to X
#Data should not be used without permission from HM Putnam
########################################################################################
rm (list = ls ()) #clears all variables
########################################################################################
#Read in libraries
library("ggplot2") #load ggplot2
library("vegan") #load vegan
library("gplots") #load gplots
#############################################################
#Set working directory and read in temp data for processing
mainDir <- '/Users/hputnam/Publications/In_Prep/Primary/3_Moorea_NGS/RAnalysis' #path on local computer
setwd(file.path(mainDir, 'Data')) #changes working directory to data
############################################################################################
###############################TEMPERATURE DATA ################################
############################################################################################
tempdata<-read.csv("20140214_Daily_mean_range_temperature.csv", header=TRUE, sep=",", na.strings="NA") #read in temp data csv file, has header, seperated by commas, empty or NA equals NA
colnames(tempdata) <- c("Site", "mean.daily.range","mean.daily.range.se","n.daily.range","mean.daily.mean","mean.daily.mean.se","n.daily.mean") # identify header names of the columns
tempdata #view temp data
#Plotting Mean Daily Range
Fig1 <- ggplot(tempdata, aes(x=Site, y=mean.daily.range, fill=Site)) + # plot temperature data with X as site and Y as mean data
geom_bar(position=position_dodge(), stat="identity") + # plot bars
geom_errorbar(aes(ymin=mean.daily.range-mean.daily.range.se, ymax=mean.daily.range+mean.daily.range.se), # plot standard error
width=.2,                    # Width of the error bars
position=position_dodge(.9)) + # position offset
ylab("Temperature °C")  # Label the Y axis as Temperature °C
#Plotting Mean Daily Mean
Fig2 <- ggplot(tempdata, aes(x=Site, y=mean.daily.mean, fill=Site)) + # plot temperature data with X as site and Y as mean data
geom_bar(position=position_dodge(), stat="identity") + # plot bars
geom_errorbar(aes(ymin=mean.daily.mean-mean.daily.mean.se, ymax=mean.daily.mean+mean.daily.mean.se), # plot standard error
width=.2,                    # Width of the error bars
position=position_dodge(.9)) + # position offset
ylab("Temperature °C") + # Label the Y axis as Temperature °C
coord_cartesian(ylim=c(26, 30)) # set the Y axis scale limits
########################################################################################
#read in Symbiodinium Clade data
Clade.Data <- read.csv("1_20140214_Clade_Data.csv", header=TRUE, sep=",")  #read in sym clade data with sample ID
########################################################################################
##Plot Frequency of sequences in Bar Charts by Clade
Fig3 <- ggplot(Clade.Data, aes(x=Clade, y=Count, fill = Clade)) + #plot clade data with frequency count as Y and clade as X
geom_bar(stat = "identity") + # plot bars
xlab("Clade") + # label X axis
ylab("Frequency") # label Y axis
########################################################################################
##Plot Realtive Abundance of All Data  by Clade
Clade.Counts <- aggregate(Count ~ Clade, data=Clade.Data, sum) # calculate sum of count for each clade
Sum <- sum(Clade.Counts$Count) # calculates total number of sequences across all clades
Rel.Clade.Counts <-Clade.Counts$Count/Sum # calculates all relative abundances
Rel.Clade.Counts <-cbind(Clade.Counts, Rel.Clade.Counts) #binds relative abundances column to data
Fig4 <- qplot(x = factor(1), y = Rel.Clade.Counts, data = Rel.Clade.Counts, geom = "bar", fill = Clade, xlab="All Data", ylab="Relative Abundance") #Plot Relative Abundance of all Clade Data
########################################################################################
##Plot stacked bar chart of relative abundances for both Genera
Genus.Clade.Data <- read.csv("20140219_Clade_Rel_Abun_Genus.csv", header=TRUE, sep=",")  #read in table of relative abundances by genus
Genus.Clade.Data
Genus.Clade.Data.2 <-Genus.Clade.Data[,-1] # subtract the first 2 colums of data from all rows
Rel.Genus.Clade.Data <- Genus.Clade.Data.2/rowSums(Genus.Clade.Data.2) #Relative Abundance
NSS <- rowSums(Rel.Genus.Clade.Data) # calculate row sums
NSS #Display Row Sums
Rel.Genus.Clade.Data.2 <-cbind(Genus.Clade.Data[,1], Rel.Genus.Clade.Data)
#Need to Stack Data
Rel.Genus.Clade.Data.Stack <- data.frame(Rel.Genus.Clade.Data.2[1], stack(Rel.Genus.Clade.Data.2[2:ncol(Rel.Genus.Clade.Data.2)])) # stack the data to reformat into long format
Rel.Genus.Clade.Data.Stack # view data
colnames(Rel.Genus.Clade.Data.Stack) <- c("Genus", "Count", "Clade")
Fig5 <- ggplot(Rel.Genus.Clade.Data.Stack, aes(x=Genus, y=Count, fill = Clade)) + #plot clade data with frequency count as Y and clade as X
geom_bar(stat = "identity") + # plot bars
xlab("Clade") + # label X axis
ylab("Relative Abundance") # label Y axis
########################################################################################
Fig1
Fig2
Fig3
Fig4
Fig5
########################################################################################
##load table
# Sample.Data <- read.csv("20140214_RelAbun_Sample_By_Clade.csv", header=TRUE, sep=",")  #read in sym clade data with sample ID
#
# #plot stacked bar chart of relative abundances by sample
# ggplot(data = Sample.Data, aes(x = Genus, y = Rel.Abun, fill = Clade)) +
#   geom_bar() +
#   theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
#   xlab("Sample") +
#   ylab("Relative Abundance")
########################################################################################
# Subclade Data
########################################################################################
Envt.Data <- read.csv("20140214_Envt_Data.csv", header=TRUE, sep=",")  #read in environmental data with sample metadata
Sym.OTU.Data <- read.csv("20140218_Final_Moorea_data.csv", header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
head(Sym.OTU.Data) #view header
rownames(Sym.OTU.Data) #view row names
colnames(Sym.OTU.Data) #view column names
sample.names <-Sym.OTU.Data[,1] # identify the sample names
sample.names # view the sample names
Sym.Data <- Sym.OTU.Data[,-1] # subtract the information columns and retain the OTU data columns
Sym.Data # view the data
Rel.Sym.Data <- Sym.Data/rowSums(Sym.Data) #Relative Abundance
N <- rowSums(Rel.Sym.Data) # calculate row sums
N #Display Row Sums
#### Transform Relative Abundance Matrix using sqrt
Trans.Rel.Sym.Data <- sqrt(Rel.Sym.Data) #sqrt transform the matrix
Trans.Rel.Sym.Data #view data
#####Calculate and Plot MDS
MDS <-metaMDS(Trans.Rel.Sym.Data, distance = "bray") # calculate the spatial similarity of samples using bray curtis dissimilarity of symbiont assemblages
Fig7 <- plot(MDS) #plot the NMDS
points(MDS, "sites", pch = 17, col = "cyan", select = Envt.Data$Species ==
"Acropora") # plot the Acropora samples in green
points(MDS, "sites", pch = 19, col = "darkorchid", select = Envt.Data$Species ==
"Porites") # plot the Porites samples in blue
coral.genus <- c(pch=17, pch=19) # set the symbols 17=triangle for Acropora, 19=circle for Porites
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Species), bty = "n", pch = coral.genus)) # add legend in the top right for the Genera
MDS.Results <-summary(MDS$stress)
Genus.ANOSIM.Results <- anosim(Trans.Rel.Sym.Data, Envt.Data$Species, permutations = 999, distance = "bray") #Run the ANOSIM test on bray curtis distance using 999 permutations
##############Simper analysis##############
Simper <- with(Envt.Data, simper(Trans.Rel.Sym.Data, Species)) #run SIMPER analysis to determine Symbiodinium "type" contributions to the differences between Coral Genera
Simper.analysis <-summary(Simper) #save the SIMPER summary
sink("SIMPER_Results.txt"); print(Simper.analysis);sink() #save the SIMPER summary to file
################################ Heat Maps #####################################
#A heatmap is a scale colour image for representing the observed values of two or more conditions, treatments, populations, etc.
#Use Rel.Sym.Data as OTU table
#Use Envt.Data
## examine OTU
class(Rel.Sym.Data)  # what type of object is it?
colnames(Rel.Sym.Data)  # what are the names of the columns / fields?
Rel.Sym.Data <- as.matrix(Rel.Sym.Data) #classify the data as a matrix
rowSums(Rel.Sym.Data) # check to see if rows sum to 1
## examine enviornmental data
class(Envt.Data)  # what type of object is it?
colnames(Envt.Data)  # what are the names of the columns / fields?
attach(Envt.Data)  # attached Envt.Data
# simple bar chart of the types per sample
Fig8 <- barplot(t(Rel.Sym.Data), xlab="SampleName", ylab="Relative Abundance", las=2) #stacked barchart of the relative abundances of the "types" per sample
#with(Envt.Data, legend("topright", legend = colnames(Rel.Sym.Data))) # add legend in the top right for the Genera
scale <- colorRampPalette(c("black", "green", "yellow")) # Set the colors that represent 0 to 1 (black, green, yellow)
Fig9 <-heatmap.2(Rel.Sym.Data,
#dendrogram information
Rowv = TRUE,
Colv=NA,
distfun = dist,
hclustfun = hclust,
dendrogram = "row",
symm = FALSE,
col=scale,
labRow = Species,
labCol = NULL,
key = TRUE,
keysize = 3,
density.info="none",
denscol=tracecol,
trace="none",
scale="none")
## heat map is crazy and you can't see anything but the largest signals
# sort by relative abundace of OTUs and remove those <1%
Sym.Data #view data
dim(Sym.Data) #view dimensions of data # dim() returns c(row_count, column_count),
Top.OTUs <-t(Sym.Data) #transpose the data
Top.OTUs <-as.data.frame(Top.OTUs) #change it to a dataframe
Top.OTUs[,59]  <- rowSums(Top.OTUs)  # Add a new column that is the total abundance of each row
colnames(Top.OTUs)  # Check your column names
colnames(Top.OTUs)[59] <- "Total"  # Fix the new column name
colnames(Top.OTUs)  # Check again
sort(Top.OTUs$Total, decreasing=TRUE)  # Sort based on decreasing Total, and returns the values
order(Top.OTUs$Total, decreasing=TRUE)  # Sort based on decreasing Total, but returns the indices
sortedTop.OTUs <- Top.OTUs[ order(Top.OTUs$Total, decreasing=TRUE) , ]  # Use the ordered indices to sort the data.frame (taxaRel is object $Total is column)
Top.50 <- sortedTop.OTUs[1:50,]  # Take the first 50 rows (most abundant taxa >0.1%) and all of the columns (samples)
Top.50 <- Top.50[ , 1:dim(Top.50)[2] - 1 ]  # include all rows, and all but the last column = column count - 1
Top.50 #view dataset of top OTUs
RelAbun <- t(Top.50) #transpose dataset to calculate relative abundance
RelAbun <- as.matrix(RelAbun) #classify dataset as a matrix
RelAbun <- RelAbun/rowSums(RelAbun) #calculate relative abundance of the rows (samples)
rowSums(RelAbun) #check to see if row sums each add to 1
topOTUs <- colnames(RelAbun) #Identify the OTU names of the top taxa
topOTUs # view data
Species   #view the Species
scale <- colorRampPalette(c("black", "green", "yellow")) # Set the colors that represent 0 to 1 (black, green, yellow)
Fig10 <- heatmap.2(RelAbun,
#dendrogram information
Rowv = TRUE,
Colv=NA,
distfun = dist,
hclustfun = hclust,
dendrogram = "row",
symm = FALSE,
col=scale,
labRow = Species,
labCol = NULL,
key = TRUE,
keysize = 3,
density.info="none",
denscol=tracecol,
trace="none",
scale="none")
########################ORDINATION ANALYSIS############################
#### DCA on transformed relative abundance data visualizing the Coral samples
Sym.Trans.Rel.dca <- decorana(Trans.Rel.Sym.Data) # run the detrended correspondence analysis on the transformed relative abundance data
Fig11 <-plot(Sym.Trans.Rel.dca, disp="sites",  type="n") #plot the dca site scores
points(Sym.Trans.Rel.dca, "sites", pch = 17, col = "green", select = Envt.Data$Species ==
"Acropora") #label the Acropora green
points(Sym.Trans.Rel.dca, "sites", pch = 19, col = "blue", select = Envt.Data$Species ==
"Porites") #label the Porites blue
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Species), bty = "n", pch = coral.genus)) #add a legend
Sym.Trans.Rel.dca #view results
DCA.Summary <-summary(Sym.Trans.Rel.dca) #view the DCA summary
Fig12 <-plot(Sym.Trans.Rel.dca, disp="sites",  type="n") #plot the DCA by sampling sites
Site.colors <- c("lightblue","darkblue","blue","red","salmon", "pink") # choose the site colors
points(Sym.Trans.Rel.dca, choices=c(1,2), by=levels(Envt.Data$Site), col=Site.colors, pch=16) #plot the points from the results of the first 2 coumns (site scores)
with(Envt.Data, legend("topright", legend = levels(Envt.Data$Site), bty = "n", col=Site.colors, pch=16)) # add a legend to identify the sites
###Subset to Acropora only for envt data
Envt.Data #view data
Acropora.IDs <- Envt.Data[which(Envt.Data$Species=="Acropora"),] # subset the Acropora Envt Data
Acropora.IDs # view data
dim(Acropora.IDs) #view dimensions
#### DCA on transformed relative abundance data For Acropora Only
Acrop.Sym.OTU.Data <- read.csv("20140219_Final_Acropora_data.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Acrop.Sym.OTU.Data #view data
Rel.Acrop.Data <- Acrop.Sym.OTU.Data/rowSums(Acrop.Sym.OTU.Data) #Calculate Relative Abundance
Acrop.N <- rowSums(Rel.Acrop.Data) # calculate row sums
Acrop.N #Display Row Sums
#### Transform Relative Abundance Matrix using sqrt
Trans.Rel.Acrop.Data <- sqrt(Rel.Acrop.Data) #sqrt transform the relative abundance matrix
Trans.Rel.Acrop.Data #view data
Acrop.Trans.Rel.dca <- decorana(Trans.Rel.Acrop.Data) # Calculate DCA
Fig13 <-plot(Acrop.Trans.Rel.dca, disp="sites",  type="n")
Site.colors <- c("lightblue","darkblue","blue", "red","salmon", "pink")
points(Acrop.Trans.Rel.dca, choices=c(1,2), by=levels(Acropora.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("topleft", legend = levels(Acropora.IDs$Site), bty = "n", col=Site.colors, pch=16))
###Subset to Porites only for envt data
Porites.IDs <- Envt.Data[which(Envt.Data$Species=="Porites"),] # subset the Porites Envt Data
Porites.IDs  #view data
dim(Porites.IDs) #dimensions of data
#### DCA on transformed relative abundance data For Porites Only
Porites.Sym.OTU.Data <- read.csv("20140219_Final_Porites_data.csv", row.names=1, header=TRUE, sep=",")  #read in sym "OTU" data with species and sample ID
Porites.Sym.OTU.Data #view data
Rel.Porites.Data <- Porites.Sym.OTU.Data/rowSums(Porites.Sym.OTU.Data) #Calculate Relative Abundance
Porites.N <- rowSums(Rel.Porites.Data) # calculate row sums
Porites.N #Display Row Sums
#### Transform Relative Abundance Matrix using sqrt
Trans.Rel.Porites.Data <- sqrt(Rel.Porites.Data) #sqrt transform the rel abundance matrix
Trans.Rel.Porites.Data
Porites.Trans.Rel.dca <- decorana(Trans.Rel.Porites.Data) # Calculate DCA
Fig14 <-plot(Porites.Trans.Rel.dca, disp="sites",  type="n")
Site.colors <- c("lightblue","darkblue","dodgerblue", "red","salmon", "pink")
points(Porites.Trans.Rel.dca, choices=c(1,2), by=levels(Porites.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("bottomright", legend = levels(Porites.IDs$Site), bty = "n", col=Site.colors, pch=16))
#### Acropora CCA on transformed relative abundance data
Trans.Rel.Acrop.Data.cca <- cca(Trans.Rel.Acrop.Data ~ DMean + DRange, data=Acropora.IDs)
anova(Trans.Rel.Acrop.Data.cca)
anova(Trans.Rel.Acrop.Data.cca, by="terms")
Acrop.CCA.summary <- summary(Trans.Rel.Acrop.Data.cca)
#Plotting Acropora CCA
Fig15 <- plot(Trans.Rel.Acrop.Data.cca,  xlim=)
points(Trans.Rel.Acrop.Data.cca, by=levels(Acropora.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("topleft", legend = levels(Acropora.IDs$Site), bty = "n", col=Site.colors, pch=16))
#### Porites CCA on transformed relative abundance data
Trans.Rel.Porites.Data.cca <- cca(Trans.Rel.Porites.Data ~ DMean + DRange, data=Porites.IDs)
anova(Trans.Rel.Porites.Data.cca)
anova(Trans.Rel.Porites.Data.cca, by="terms")
Por.CCA.summary <- summary(Trans.Rel.Porites.Data.cca)
#Plotting Acropora CCA
Fig16 <- plot(Trans.Rel.Porites.Data.cca,  xlim=)
points(Trans.Rel.Porites.Data.cca, by=levels(Porites.IDs$Site), col=Site.colors, pch=16)
with(Envt.Data, legend("topleft", legend = levels(Porites.IDs$Site), bty = "n", col=Site.colors, pch=16))
