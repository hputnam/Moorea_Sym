<<<<<<< HEAD
}
# Add lines to separate species and species names
for (i in 1:length(spbreaks)) {
lines(c(0, 1.07), c(spbreaks[i], spbreaks[i]), xpd=T, type="l", lwd=0.4)
text(1.03, (spbreaks[i] + spbreaks[i+1]) / 2, xpd=T, pos=4, cex=0.8,
labels=paste(samdat$Genus[which(duplicated(samdat$Species)==F)][i], "\n",
samdat$Species[which(duplicated(samdat$Species)==F)][i], sep=""))
}
for (i in 1:nrow(samdat)) {
text(0, i-0.5, rownames(samdat)[i], xpd=T, cex=0.7, pos=2)
}
}
par(mfrow=c(1,1), mar=c(2, 1.5, 2, 10), lwd=0.1, cex=0.7, xpd=NA)
# Plot composition of 97% within-sample OTUs colored by clade
composition(phy.f.p, col=taxcolors[factor(data.frame(tax_table(phy.f.p))[order(data.frame(tax_table(phy.f.p))$Subtype), ]$Clade, levels=c("A","C","D"))], legend=T)
tile1.1 <- read.csv("Data/Tiles1_1_905379_Jan06_Sept06.csv")
tile1.1 <- tile1.1[,c(1:2)]
tile1.2 <- read.csv("Data/Tiles1_2_905385_Sept06_Jan07.csv")
tile1.2 <- tile1.2[,c(1:2)]
tile1.3 <- read.csv("Data/Tiles1_3_905383_Jan07_Sept07.csv")
tile1.3 <- tile1.3[,c(1:2)]
tile1.4 <- read.csv("Data/Tiles1_4_905377_Sept07_Feb08.csv")
tile1.4 <- tile1.4[,c(1:2)]
Tile1 <- rbind(tile1.1, tile1.2, tile1.3, tile1.4)
tile2.1 <- read.csv("Data/Tiles2_1_905381_Jan06_Sept06.csv")
tile2.1 <- tile2.1[,c(1:2)]
tile2.2 <- read.csv("Data/Tiles2_2_905384_Jan07_Sept07.csv")
tile2.2 <- tile2.2[,c(1:2)]
Tile2 <- rbind(tile1.1, tile1.2)
temp <- cbind(Tile1$Day.Time, Tile2$Day.Time, Tile1$Temp.C, Tile2$Temp.C)
?cbind
hist(Tile1$Temp.C, xlim=c(26.5,31.5), breaks=20, main="Site 1", xlab="Temp 째C")
hist(Tile1$Temp.C, xlim=c(26.5,31.5), breaks=20, main="Site 1", xlab="Temp 째C")
View(Tile1)
par(mfrow=c(2,3), mar=c(3,3,2,2), mgp=c(1.5,0.1,0), tcl=-0.2)
hist(Tile1$Temp.C, xlim=c(26.5,31.5), breaks=20, main="Site 1", xlab="Temp 째C")
dev.off()
hist(Tile1$Temp.C, xlim=c(26.5,31.5), breaks=20, main="Site 1", xlab="Temp 째C")
View(temp)
?merge
tile1.1 <- read.csv("Data/Tiles1_1_905379_Jan06_Sept06.csv")
tile1.1 <- tile1.1[,c(1:2)]
tile1.2 <- read.csv("Data/Tiles1_2_905385_Sept06_Jan07.csv")
tile1.2 <- tile1.2[,c(1:2)]
tile1.3 <- read.csv("Data/Tiles1_3_905383_Jan07_Sept07.csv")
tile1.3 <- tile1.3[,c(1:2)]
tile1.4 <- read.csv("Data/Tiles1_4_905377_Sept07_Feb08.csv")
tile1.4 <- tile1.4[,c(1:2)]
Site.1 <- rbind(tile1.1, tile1.2, tile1.3, tile1.4)
tile2.1 <- read.csv("Data/Tiles2_1_905381_Jan06_Sept06.csv")
tile2.1 <- tile2.1[,c(1:2)]
tile2.2 <- read.csv("Data/Tiles2_2_905384_Jan07_Sept07.csv")
tile2.2 <- tile2.2[,c(1:2)]
Site.2 <- rbind(tile1.1, tile1.2)
tile3.1 <- read.csv("Data/Tiles3_1_905385_Jan06_Sept06.csv")
tile3.1 <- tile3.1[,c(1:2)]
tile3.2 <- read.csv("Data/Tiles3_2_905382_Sept06_Jan07.csv")
tile3.2 <- tile3.2[,c(1:2)]
tile3.3 <- read.csv("Data/Tiles3_3_905381_Jan07_Sept07.csv")
tile3.3 <- tile3.3[,c(1:2)]
tile3.4 <- read.csv("Data/Tiles3_4_905379_Sept07_Feb08.csv")
tile3.4 <- tile3.4[,c(1:2)]
Site.3 <- rbind(tile3.1, tile3.2, tile3.3, tile3.4)
View(Site.1)
tile1.1 <- read.csv("Data/Tiles1_905379_Jan06_Sept06.csv")
tile1.1 <- read.csv("Data/Tiles1_905377_Jan06_Sept06.csv")
tile1.4 <- read.csv("Data/Tiles1_905377_Sept07_Feb08.csv")
View(tile1.4)
tile1.1 <- read.csv("Data/Tiles1_905377_Jan06_Sept06.csv")
tile1.1 <- read.csv("Data/Tiles1_1_905379_Jan06_Sept06.csv")
tile1.1 <- tile1.1[,c(1:2)]
tile1.2 <- read.csv("Data/Tiles1_2_905385_Sept06_Jan07.csv")
tile1.2 <- tile1.2[,c(1:2)]
tile1.3 <- read.csv("Data/Tiles1_3_905383_Jan07_Sept07.csv")
tile1.3 <- tile1.3[,c(1:2)]
tile1.4 <- read.csv("Data/Tiles1_4_905377_Sept07_Feb08.csv")
tile1.4 <- tile1.4[,c(1:2)]
Site.1 <- rbind(tile1.1, tile1.2, tile1.3, tile1.4)
tile2.1 <- read.csv("Data/Tiles2_1_905381_Jan06_Sept06.csv")
tile2.1 <- tile2.1[,c(1:2)]
tile2.2 <- read.csv("Data/Tiles2_2_905384_Jan07_Sept07.csv")
tile2.2 <- tile2.2[,c(1:2)]
Site.2 <- rbind(tile1.1, tile1.2)
View(Site.1)
View(Site.2)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T) #crashes R
View(temp)
tile1.1 <- read.csv("Data/Tiles1_1_905379_Jan06_Sept06.csv")
tile1.1 <- tile1.1[,c(1:2)]
tile1.2 <- read.csv("Data/Tiles1_2_905385_Sept06_Jan07.csv")
tile1.2 <- tile1.2[,c(1:2)]
tile1.3 <- read.csv("Data/Tiles1_3_905383_Jan07_Sept07.csv")
tile1.3 <- tile1.3[,c(1:2)]
tile1.4 <- read.csv("Data/Tiles1_4_905377_Sept07_Feb08.csv")
tile1.4 <- tile1.4[,c(1:2)]
Site.1 <- rbind(tile1.1, tile1.2, tile1.3, tile1.4)
tile2.1 <- read.csv("Data/Tiles2_1_905381_Jan06_Sept06.csv")
tile2.1 <- tile2.1[,c(1:2)]
tile2.2 <- read.csv("Data/Tiles2_2_905384_Jan07_Sept07.csv")
tile2.2 <- tile2.2[,c(1:2)]
Site.2 <- rbind(tile1.1, tile1.2)
tile3.1 <- read.csv("Data/Tiles3_1_905385_Jan06_Sept06.csv")
tile3.1 <- read.csv("Data/Tiles3_1_905385_Jan06_Sept06.csv")
tile3.1 <- tile3.1[,c(1:2)]
tile3.2 <- read.csv("Data/Tiles3_2_905382_Sept06_Jan07.csv")
tile3.2 <- tile3.2[,c(1:2)]
tile3.3 <- read.csv("Data/Tiles3_3_905381_Jan07_Sept07.csv")
tile3.3 <- tile3.3[,c(1:2)]
tile3.4 <- read.csv("Data/Tiles3_4_905379_Sept07_Feb08.csv")
tile3.4 <- tile3.4[,c(1:2)]
Site.3 <- rbind(tile3.1, tile3.2, tile3.3, tile3.4)
temp <- merge(Site.1, Site.2, Site.3,  by='Date.Time', all=T)
View(Site.3)
tile3.1 <- read.csv("Data/Tiles3_1_905385_Jan06_Sept06.csv")
tile3.1 <- tile3.1[,c(1:2)]
tile3.2 <- read.csv("Data/Tiles3_2_905382_Sept06_Jan07.csv")
tile3.2 <- tile3.2[,c(1:2)]
tile3.3 <- read.csv("Data/Tiles3_3_905381_Jan07_Sept07.csv")
tile3.3 <- tile3.3[,c(1:2)]
tile3.4 <- read.csv("Data/Tiles3_4_905379_Sept07_Feb08.csv")
tile3.4 <- tile3.4[,c(1:2)]
Site.3 <- rbind(tile3.1, tile3.2, tile3.3, tile3.4)
temp <- merge(Site.1, Site.2, Site.3, by='Date.Time', all=T)
View(Site.1)
View(Site.2)
View(Site.3)
View(temp)
tail(temp)
View(Site.1)
View(Site.2)
View(Site.3)
View(Site.1)
View(temp)
temp <- merge(Site.1, Site.2, Site.3, by='Date/Time', all=T)
tile1.1 <- read.csv("Data/Tiles1_1_905379_Jan06_Sept06.csv")
tile1.1 <- tile1.1[,c(1:2)]
tile1.2 <- read.csv("Data/Tiles1_2_905385_Sept06_Jan07.csv")
tile1.2 <- tile1.2[,c(1:2)]
tile1.3 <- read.csv("Data/Tiles1_3_905383_Jan07_Sept07.csv")
tile1.3 <- tile1.3[,c(1:2)]
tile1.4 <- read.csv("Data/Tiles1_4_905377_Sept07_Feb08.csv")
tile1.4 <- tile1.4[,c(1:2)]
Site.1 <- rbind(tile1.1, tile1.2, tile1.3, tile1.4)
tile2.1 <- read.csv("Data/Tiles2_1_905381_Jan06_Sept06.csv")
tile2.1 <- tile2.1[,c(1:2)]
tile2.2 <- read.csv("Data/Tiles2_2_905384_Jan07_Sept07.csv")
tile2.2 <- tile2.2[,c(1:2)]
Site.2 <- rbind(tile1.1, tile1.2)
tile3.1 <- read.csv("Data/Tiles3_1_905385_Jan06_Sept06.csv")
tile3.1 <- tile3.1[,c(1:2)]
tile3.2 <- read.csv("Data/Tiles3_2_905382_Sept06_Jan07.csv")
tile3.2 <- tile3.2[,c(1:2)]
tile3.3 <- read.csv("Data/Tiles3_3_905381_Jan07_Sept07.csv")
tile3.3 <- tile3.3[,c(1:2)]
tile3.4 <- read.csv("Data/Tiles3_4_905379_Sept07_Feb08.csv")
tile3.4 <- tile3.4[,c(1:2)]
Site.3 <- rbind(tile3.1, tile3.2, tile3.3, tile3.4)
temp <- merge(Site.1, Site.2, Site.3, by='Date.Time', all=T)
View(temp)
View(Site.1)
View(Site.2)
View(Site.3)
View(Site.3)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T)
View(Site.2)
View(Site.3)
View(Site.2)
View(Site.3)
View(Site.2)
View(Site.3)
str(Site.2)
str(Site.3)
temp <- merge(Site.1, Site.2, Site.3,  by='Date.Time', all=T)
Site.3$Date.Time
tail(Site.3$Date.Time)
class(Site.3$Date.Time)
class(Site.2$Date.Time)
class(Site.1$Date.Time)
dim(Site.1)
dim(Site.2)
dim(Site.3)
temp <- merge(Site.1, Site.2  by='Date.Time', all=T)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T)
temp <- merge(temp, Site.3,  by='Date.Time', all=T)
tile7.1 <- read.csv("Data/Tiles7_1_905376_Jan06_Sept06.csv")
tile7.1 <- tile7.1[,c(1:2)]
tile7.2 <- read.csv("Data/Tiles7_2_905383_Sept06_Jan07.csv")
tile7.2 <- tile7.2[,c(1:2)]
tile7.3 <- read.csv("Data/Tiles7_3_905377_Jan07_Sept07.csv")
tile7.3 <- tile7.3[,c(1:2)]
tile7.4 <- read.csv("Data/Tiles7_4_905376_Sept07_Feb08.csv")
tile7.4 <- tile7.4[,c(1:2)]
Site.7 <- rbind(tile7.1, tile7.2, tile7.3, tile7.4)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T)
temp <- merge(temp, Site.3,  by='Date.Time', all=T)
temp <- merge(temp, Site.7,  by='Date.Time', all=T)
tile8.1 <- read.csv("Data/Tiles8_1_905383_Jan06_Sept06.csv")
tile8.1 <- tile8.1[,c(1:2)]
tile8.2 <- read.csv("Data/Tiles8_2_905379_Sept06_Jan07.csv")
tile8.2 <- tile8.2[,c(1:2)]
tile8.3 <- read.csv("Data/Tiles8_3_905385_Sept07_Feb08.csv")
tile8.3 <- tile8.3[,c(1:2)]
Site.8 <- rbind(tile8.1, tile8.2, tile8.3)
tile8.1 <- read.csv("Data/Tiles8_1_905383_Jan06_Sept06.csv")
tile8.1 <- tile8.1[,c(1:2)]
tile8.1 <- read.csv("Data/Tiles8_1_905383_Jan06_Sept06.csv")
tile8.1 <- tile8.1[,c(1:2)]
tile8.2 <- read.csv("Data/Tiles8_2_905379_Sept06_Jan07.csv")
tile8.2 <- tile8.2[,c(1:2)]
tile8.3 <- read.csv("Data/Tiles8_3_905385_Sept07_Feb08.csv")
tile8.3 <- tile8.3[,c(1:2)]
Site.8 <- rbind(tile8.1, tile8.2, tile8.3)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T)
temp <- merge(temp, Site.3,  by='Date.Time', all=T)
temp <- merge(temp, Site.7,  by='Date.Time', all=T)
temp <- merge(temp, Site.8,  by='Date.Time', all=T)
View(temp)
tile9.1 <- read.csv("Data/Tiles9_1_905384_Jan06_Sept06.csv")
tile9.1 <- tile9.1[,c(1:2)]
tile9.2 <- read.csv("Data/Tiles9_2_905381_Sept06_Jan07.csv")
tile9.2 <- tile9.2[,c(1:2)]
tile9.3 <- read.csv("Data/Tiles9_3_818724_Jan07_Sept07.csv")
tile9.3 <- tile9.3[,c(1:2)]
tile9.4 <- read.csv("Data/Tiles9_4_905378_Sept07_Feb08.csv")
tile9.4 <- tile9.4[,c(1:2)]
Site.9 <- rbind(tile9.1, tile9.2, tile9.3, tile9.4)
Site.9 <- rbind(tile9.1, tile9.2, tile9.3, tile9.4)
View(tile9.1)
View(tile9.2)
View(tile9.1)
View(tile9.2)
View(tile9.3)
View(tile9.4)
tile9.1 <- read.csv("Data/Tiles9_1_905384_Jan06_Sept06.csv")
tile9.1 <- tile9.1[,c(1:2)]
tile9.2 <- read.csv("Data/Tiles9_2_905381_Sept06_Jan07.csv")
tile9.2 <- tile9.2[,c(1:2)]
tile9.3 <- read.csv("Data/Tiles9_3_818724_Jan07_Sept07.csv")
tile9.3 <- tile9.3[,c(1:2)]
tile9.4 <- read.csv("Data/Tiles9_4_905378_Sept07_Feb08.csv")
tile9.4 <- tile9.4[,c(1:2)]
Site.9 <- rbind(tile9.1, tile9.2, tile9.3, tile9.4)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T)
temp <- merge(temp, Site.3,  by='Date.Time', all=T)
temp <- merge(temp, Site.7,  by='Date.Time', all=T)
temp <- merge(temp, Site.8,  by='Date.Time', all=T)
temp <- merge(temp, Site.9,  by='Date.Time', all=T)
colnames(temp) <- c("Date.Time", "Site.1", "Site.2", "Site.3", "Site.7", "Site.8", "Site.9")
View(temp)
# Plot temperature distributions for each site
par(mfrow=c(2,3), mar=c(3,3,2,2), mgp=c(1.5,0.1,0), tcl=-0.2)
=======
>>>>>>> fb50dafa2bd19b5dca75f8e4d103c4baf4376fce
hist(temp$Site.1, xlim=c(26.5,31.5), breaks=20, main="Site 1", xlab="Temp 째C")
hist(temp$Site.2, xlim=c(26.5,31.5), breaks=20, main="Site 2", xlab="Temp 째C")
hist(temp$Site.3, xlim=c(26.5,31.5), breaks=20, main="Site 3", xlab="Temp 째C")
hist(temp$Site.7, xlim=c(26.5,31.5), breaks=20, main="Site 7", xlab="Temp 째C")
hist(temp$Site.8, xlim=c(26.5,31.5), breaks=20, main="Site 8", xlab="Temp 째C")
hist(temp$Site.9, xlim=c(26.5,31.5), breaks=20, main="Site 9", xlab="Temp 째C")
# Calculate summary statistics for each site
temp.summ <- data.frame(mean=apply(temp[,2:7], 2, FUN=mean, na.rm=T),
med=apply(temp[,2:7], 2, FUN=median, na.rm=T),
sd=apply(temp[,2:7], 2, FUN=sd, na.rm=T),
var=apply(temp[,2:7], 2, FUN=var, na.rm=T),
min=apply(temp[,2:7], 2, FUN=min, na.rm=T),
max=apply(temp[,2:7], 2, FUN=max, na.rm=T),
range=apply(temp[,2:7], 2, FUN=function(x) diff(range(x, na.rm=T))),
skew=apply(temp[,2:7], 2, FUN=skewness, na.rm=T),
kurt=apply(temp[,2:7], 2, FUN=function(x) kurtosis(na.omit(x))-3),
hskew=apply(temp[,2:7], 2, FUN=hyperskewness),
hflat=apply(temp[,2:7], 2, FUN=hyperflatness),
dip=apply(temp[,2:7], 2, FUN=function(x) dip(na.omit(x))))
library(moments)
library(diptest)
hyperskewness <- function(x) moment(na.omit(x), order=5, central=T) / sd(na.omit(x))^5
hyperflatness <- function(x) moment(na.omit(x), order=6, central=T) / sd(na.omit(x))^6
# Import temperature data
#temp <- read.csv("Data/Moorea_Temp_Data.csv")
tile1.1 <- read.csv("Data/Tiles1_1_905379_Jan06_Sept06.csv")
tile1.1 <- tile1.1[,c(1:2)]
tile1.2 <- read.csv("Data/Tiles1_2_905385_Sept06_Jan07.csv")
tile1.2 <- tile1.2[,c(1:2)]
tile1.3 <- read.csv("Data/Tiles1_3_905383_Jan07_Sept07.csv")
tile1.3 <- tile1.3[,c(1:2)]
tile1.4 <- read.csv("Data/Tiles1_4_905377_Sept07_Feb08.csv")
tile1.4 <- tile1.4[,c(1:2)]
Site.1 <- rbind(tile1.1, tile1.2, tile1.3, tile1.4)
tile2.1 <- read.csv("Data/Tiles2_1_905381_Jan06_Sept06.csv")
tile2.1 <- tile2.1[,c(1:2)]
tile2.2 <- read.csv("Data/Tiles2_2_905384_Jan07_Sept07.csv")
tile2.2 <- tile2.2[,c(1:2)]
Site.2 <- rbind(tile1.1, tile1.2)
tile3.1 <- read.csv("Data/Tiles3_1_905385_Jan06_Sept06.csv")
tile3.1 <- tile3.1[,c(1:2)]
tile3.2 <- read.csv("Data/Tiles3_2_905382_Sept06_Jan07.csv")
tile3.2 <- tile3.2[,c(1:2)]
tile3.3 <- read.csv("Data/Tiles3_3_905381_Jan07_Sept07.csv")
tile3.3 <- tile3.3[,c(1:2)]
tile3.4 <- read.csv("Data/Tiles3_4_905379_Sept07_Feb08.csv")
tile3.4 <- tile3.4[,c(1:2)]
Site.3 <- rbind(tile3.1, tile3.2, tile3.3, tile3.4)
tile7.1 <- read.csv("Data/Tiles7_1_905376_Jan06_Sept06.csv")
tile7.1 <- tile7.1[,c(1:2)]
tile7.2 <- read.csv("Data/Tiles7_2_905383_Sept06_Jan07.csv")
tile7.2 <- tile7.2[,c(1:2)]
tile7.3 <- read.csv("Data/Tiles7_3_905377_Jan07_Sept07.csv")
tile7.3 <- tile7.3[,c(1:2)]
tile7.4 <- read.csv("Data/Tiles7_4_905376_Sept07_Feb08.csv")
tile7.4 <- tile7.4[,c(1:2)]
Site.7 <- rbind(tile7.1, tile7.2, tile7.3, tile7.4)
tile8.1 <- read.csv("Data/Tiles8_1_905383_Jan06_Sept06.csv")
tile8.1 <- tile8.1[,c(1:2)]
tile8.2 <- read.csv("Data/Tiles8_2_905379_Sept06_Jan07.csv")
tile8.2 <- tile8.2[,c(1:2)]
tile8.3 <- read.csv("Data/Tiles8_3_905385_Sept07_Feb08.csv")
tile8.3 <- tile8.3[,c(1:2)]
Site.8 <- rbind(tile8.1, tile8.2, tile8.3)
tile9.1 <- read.csv("Data/Tiles9_1_905384_Jan06_Sept06.csv")
tile9.1 <- tile9.1[,c(1:2)]
tile9.2 <- read.csv("Data/Tiles9_2_905381_Sept06_Jan07.csv")
tile9.2 <- tile9.2[,c(1:2)]
tile9.3 <- read.csv("Data/Tiles9_3_818724_Jan07_Sept07.csv")
tile9.3 <- tile9.3[,c(1:2)]
tile9.4 <- read.csv("Data/Tiles9_4_905378_Sept07_Feb08.csv")
tile9.4 <- tile9.4[,c(1:2)]
Site.9 <- rbind(tile9.1, tile9.2, tile9.3, tile9.4)
temp <- merge(Site.1, Site.2,  by='Date.Time', all=T)
temp <- merge(temp, Site.3,  by='Date.Time', all=T)
temp <- merge(temp, Site.7,  by='Date.Time', all=T)
temp <- merge(temp, Site.8,  by='Date.Time', all=T)
temp <- merge(temp, Site.9,  by='Date.Time', all=T)
colnames(temp) <- c("Date.Time", "Site.1", "Site.2", "Site.3", "Site.7", "Site.8", "Site.9")
temp$Date.Time <- as.POSIXct(temp$Date.Time, format="%m/%d/%y %T", tz="Pacific/Tahiti")
# Plot temperature distributions for each site
par(mfrow=c(2,3), mar=c(3,3,2,2), mgp=c(1.5,0.1,0), tcl=-0.2)
hist(temp$Site.1, xlim=c(26.5,31.5), breaks=20, main="Site 1", xlab="Temp 째C")
hist(temp$Site.2, xlim=c(26.5,31.5), breaks=20, main="Site 2", xlab="Temp 째C")
hist(temp$Site.3, xlim=c(26.5,31.5), breaks=20, main="Site 3", xlab="Temp 째C")
hist(temp$Site.7, xlim=c(26.5,31.5), breaks=20, main="Site 7", xlab="Temp 째C")
hist(temp$Site.8, xlim=c(26.5,31.5), breaks=20, main="Site 8", xlab="Temp 째C")
hist(temp$Site.9, xlim=c(26.5,31.5), breaks=20, main="Site 9", xlab="Temp 째C")
# Calculate summary statistics for each site
temp.summ <- data.frame(mean=apply(temp[,2:7], 2, FUN=mean, na.rm=T),
med=apply(temp[,2:7], 2, FUN=median, na.rm=T),
sd=apply(temp[,2:7], 2, FUN=sd, na.rm=T),
var=apply(temp[,2:7], 2, FUN=var, na.rm=T),
min=apply(temp[,2:7], 2, FUN=min, na.rm=T),
max=apply(temp[,2:7], 2, FUN=max, na.rm=T),
range=apply(temp[,2:7], 2, FUN=function(x) diff(range(x, na.rm=T))),
skew=apply(temp[,2:7], 2, FUN=skewness, na.rm=T),
kurt=apply(temp[,2:7], 2, FUN=function(x) kurtosis(na.omit(x))-3),
hskew=apply(temp[,2:7], 2, FUN=hyperskewness),
hflat=apply(temp[,2:7], 2, FUN=hyperflatness),
dip=apply(temp[,2:7], 2, FUN=function(x) dip(na.omit(x))))
temp.summ
View(temp.summ)
with(temp.summ, {
par(mar=c(3,4,6,1), mfrow=c(1,1))
plot(NA, xaxt="n", xlim=c(1,6), ylim=c(1,6), xlab="", ylab="Rank Order")
axis(side=1, at=1:6, labels = rownames(temp.summ))
lines(rank(mean), type="b", pch=5, col="gray")
lines(rank(var), type="b", pch=5, col="green")
lines(rank(skew), type="b", pch=2, col="blue")
lines(rank(kurt), type="b", pch=4, col="purple")
lines(rank(hflat), type="b", pch=6, col="black")
lines(rank(dip), type="b", pch=7, col="pink")
legend("top", legend=c("variance", "skewness", "kurtosis", "hyperflatness", "bimodality"),
lty=1, col=c("green", "blue", "purple", "black", "pink"),
pch=c(5,2,4,6,7), inset=c(0,-0.4), xpd=NA)
})
with(temp.summ, {
par(mar=c(3,4,6,1), mfrow=c(1,1))
plot(NA, xaxt="n", xlim=c(1,6), ylim=c(1,6), xlab="", ylab="Rank Order")
axis(side=1, at=1:6, labels = rownames(temp.summ))
lines(rank(mean), type="b", pch=1, col="gray")
lines(rank(var), type="b", pch=5, col="green")
lines(rank(skew), type="b", pch=2, col="blue")
lines(rank(kurt), type="b", pch=4, col="purple")
lines(rank(hflat), type="b", pch=6, col="black")
lines(rank(dip), type="b", pch=7, col="pink")
legend("top", legend=c("mean", "variance", "skewness", "kurtosis", "hyperflatness", "bimodality"),
lty=1, col=c("gray", "green", "blue", "purple", "black", "pink"),
pch=c(5,2,4,6,7), inset=c(0,-0.4), xpd=NA)
})
with(temp.summ, {
par(mar=c(3,4,6,1), mfrow=c(1,1))
plot(NA, xaxt="n", xlim=c(1,6), ylim=c(1,6), xlab="", ylab="Rank Order")
axis(side=1, at=1:6, labels = rownames(temp.summ))
lines(rank(mean), type="b", pch=15, col="gray")
lines(rank(var), type="b", pch=5, col="green")
lines(rank(skew), type="b", pch=2, col="blue")
lines(rank(kurt), type="b", pch=4, col="purple")
lines(rank(hflat), type="b", pch=6, col="black")
lines(rank(dip), type="b", pch=7, col="pink")
legend("top", legend=c("mean", "variance", "skewness", "kurtosis", "hyperflatness", "bimodality"),
lty=1, col=c("gray", "green", "blue", "purple", "black", "pink"),
pch=c(5,2,4,6,7), inset=c(0,-0.4), xpd=NA)
})
with(temp.summ, {
par(mar=c(3,4,6,1), mfrow=c(1,1))
plot(NA, xaxt="n", xlim=c(1,6), ylim=c(1,6), xlab="", ylab="Rank Order")
axis(side=1, at=1:6, labels = rownames(temp.summ))
lines(rank(mean), type="b", pch=15, col="gray")
lines(rank(var), type="b", pch=5, col="green")
lines(rank(skew), type="b", pch=2, col="blue")
lines(rank(kurt), type="b", pch=4, col="purple")
lines(rank(hflat), type="b", pch=6, col="black")
lines(rank(dip), type="b", pch=7, col="pink")
legend("top", legend=c("mean", "variance", "skewness", "kurtosis", "hyperflatness", "bimodality"),
lty=1, col=c("gray", "green", "blue", "purple", "black", "pink"),
pch=c(15,5,2,4,6,7), inset=c(0,-0.4), xpd=NA)
})
plot_heatmap(phy.f.t, "NMDS", "bray", "SampleType", "Family")
plot_heatmap(phy.f.t, "NMDS", "bray")
plot_heatmap(phy.f.t, "NMDS", "bray", "Subtype")
plot_heatmap(phy.f.t, "NMDS", "bray")
plot_richness(phy.f)
?plot_richness
plot_richness(phy.f, "Species")
plot_richness(phy.f, "Species", "Site")
plot_richness(phy.f, "Site", "Species")
plot_tree(phy.f)
plot_bar(phy.f)
plot_richness(phy.f, "Site", "Species")
plot_bar(phy.f)
plot_bar(phy.f, fill=Subtype2)
plot_bar(phy.f, fill="Subtype2")
plot_bar(phy.f, fill="Subtype2", facet_grid = ~Clade)
plot_bar(phy.f, fill="Subtype", facet_grid = ~Clade)
plot_bar(phy.f)
plot_ordination(phy.f, ordinate(phy.f, "MDS"), color = "Site") + geom_point(size = 5)
plot_ordination(phy.f, ordinate(phy.f, "MDS"), color = "Site")
plot_ordination(phy.f, ordinate(phy.f, "MDS"), color = "Species")
---
title: "Moorea *Symbiodinium* data exploration"
author: "Ross Cunning"
date: "November 18, 2016"
output: html_document
---
```{r load}
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
load("Data/Moorea_sym.RData")  # loads phyloseq object named phy.f
head(phy.f)
phy.f
<<<<<<< HEAD
tax_table(phy.f)
ordinate(phy.f, "NMDS", "bray",try=100)
ordinate(phy.f.t, "NMDS", "bray",try=100)
phy.f.t
plot_bar(phy.f)
x -> read.csv("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv")
x -> read.csv("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", header=T, sep="")
x <- read.csv("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", header=T, sep="")
x <- read.csv("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", header=T, sep=" ")
View(x)
x <- read.csv("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", header=T)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=TRUE)
View(x)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F)
?read.table
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F, ncols=-1)
x <- x[,-1]
x <- x/rowSums(x)
x
rowSums(x)
d <- dist(x)
d
d <- dist(t(x))
d
dim(d)
class(d)
vegdist(t(x),method="bray")
library(vegan)
vegdist(t(x),method="bray")
metaMDS(d)
d
library(vegdist)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F)
x < x[,-1]
library(vegan)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F)
x < x[,-1]
View(x)
x[,-1]
x <- x[,-1]
d <- vegdist(t(x),method="bray")
d
View(x)
rel.x <- as.matrix(t(x))
rel.x <- x/rowSums(x)
rowSums(x)
library(vegan)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F)
x <- x[,-1]
rel.x <- as.matrix(t(x))
rel.x <- x/colSums(x)
colSums(x)
library(vegan)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F)
x <- x[,-1]
rel.x <- x/rowSums(x)
rowSums(rel.x)
rel.x <- as.matrix(t(x))
d <- vegdist(x,method="bray")
d
rel.x
library(vegan)
x <- read.table("/Users/hputnam/MyProjects/Moorea_Sym/Bioinf/clust/97_otus_bysample.tsv", sep="\t", header=F)
x <- x[,-1]
rel.x <- x/rowSums(x)
rel.x
View(rel.x)
=======
# Filter OTUs by minimum count
# Set threshold count
n <- 10
# Identify OTUs below threshold count
taxa <- taxa_sums(phy.f)[which(taxa_sums(phy.f) >= n)]
# Remove taxa below threshold count
phy.f <- prune_taxa(names(taxa), phy.f)
# Filter samples by minimum count
# Set threshold number of reads
sn <- 100
# Remove samples with fewer reads than threshold
phy.f <- prune_samples(sample_sums(phy.f)>=sn, phy.f)
# Filter OTUs by minimum count again in case any dropped below threshold after filtering samples
# Identify OTUs below threshold count
taxa <- taxa_sums(phy.f)[which(taxa_sums(phy.f) >= n)]
# Remove taxa below threshold count
phy.f <- prune_taxa(names(taxa), phy.f)
# Label clades and subtypes for filtered phyloseq object tax_tables
get.st <- function(df) {
within(df, {
Clade <- substr(hit, 1, 1)
Subtype <- gsub(hit, pattern="_[A-Z]{2}[0-9]{6}", replacement="")
Subtype <- gsub(Subtype, pattern="_multiple", replacement="")
Subtype2 <- ifelse(as.numeric(sim)==100, paste0("'", Subtype, "'"),
paste0("'[", rep(rle(sort(Subtype))$values, times=rle(sort(Subtype))$lengths), "]'^",
unlist(lapply(rle(sort(Subtype))$lengths, seq_len)))[order(order(Subtype))])
#Subtype <- ifelse(as.numeric(sim)==100, Subtype, paste("*", Subtype, sep=""))
})
}
tax_table(phy.f) <- as.matrix(get.st(data.frame(tax_table(phy.f), stringsAsFactors=FALSE)))
# Convert to proportion (relative abundance)
phy.f.p <- transform_sample_counts(phy.f, function(x) x/sum(x))
# Apply transformation function
transform <- function(x) sqrt(x/sum(x))  # Set transformation function
phy.f.t <- transform_sample_counts(phy.f, transform)  # Transform data
cladeAbund <- aggregate(data.frame(RelAbund=rowSums(otu_table(phy.f.p))),
by=list(Clade=data.frame(tax_table(phy.f.p))$Clade), FUN=sum)
cladeAbund$Prop <- prop.table(cladeAbund$RelAbund)
bars <- barplot(cladeAbund$Prop*100, col=taxcolors, space=0,
names.arg=cladeAbund$Clade, xlab=expression(paste(italic('Symbiodinium'), " Clade")),
ylab="Relative abundance (%)")
text(bars, cladeAbund$Prop*100+2, labels=round(cladeAbund$Prop*100, 1), xpd=T)
cladeAbund$Notus <- table(data.frame(tax_table(phy.f.p))$Clade)
cladeAbund$Notus
composition <- function(phy, col, legend=T) {
samdat <- data.frame(sample_data(phy))
#samdat$Genus <- factor(samdat$Genus, levels=rev(levels(samdat$Genus)))
samdat$Species <- factor(samdat$Species, levels=rev(levels(samdat$Species)))
samdat$Site <- factor(samdat$Site, levels=rev(levels(samdat$Site)))
samdat <- samdat[with(samdat, order(Species, Site, -DNA.ID)), ]
typerelabund <- as.matrix(otu_table(phy)[order(data.frame(tax_table(phy))$hit),
rownames(samdat)])
sitebreaks <- c(as.character(samdat$Site), "X")==c("X", as.character(samdat$Site))
sitebreaks <- which(sitebreaks==F) - 1
spbreaks <- c(which(duplicated(samdat$Species)==F) - 1, nrow(samdat))
# Make Barplot
barplot(typerelabund, horiz=T, space=0, axes=F,axisnames=F, yaxs="i", col=col)
rect(0, 0, par("usr")[2], par("usr")[4], lwd=1, xpd=T)
axis(side=1, at=seq(0, 1, 0.1), line=0, tck=-0.025, mgp=c(0,0.25,0), cex.axis=0.7)
mtext(side=1, "Relative abundance", cex=0.7, line=1)
# Add legend
if (legend==T) {
legend(x=par("usr")[2]/2, y=par("usr")[4], xjust=0.5, yjust=0.25, horiz=T, bty="n", xpd=T,
cex=0.7, legend=c("A", "C", "D"), fill=taxcolors, x.intersp=0.5)
legend(x=par("usr")[2]*1.1, y=par("usr")[4]*0.75, xjust=0, yjust=0.1, bty="n", xpd=T, cex=1,
pt.cex=1, legend=c("Site 1", "Site 2", "Site 3", "Site 7", "Site 8", "Site 9"), fill=c("purple", "blue", "green", "yellow", "orange", "red"), y.intersp=0.7,
x.intersp=0.3)
}
# Add grouping bars for Site
sitecolors <- matrix(c("red", "orange", "yellow", "green", "blue", "purple"),
dimnames=list(c("Site 1", "Site 2", "Site 3", "Site 7", "Site 8", "Site 9")))
for (i in 1:length(sitebreaks)) {
lines(c(0, 1), c(sitebreaks[i], sitebreaks[i]), lty=2, lwd=0.25)
rect(1.01, sitebreaks[i], 1.04, sitebreaks[i+1], col=sitecolors[samdat$Site[sitebreaks[i]+1],],
lwd=0.25, xpd=T)
}
# Add lines to separate species and species names
for (i in 1:length(spbreaks)) {
lines(c(0, 1.07), c(spbreaks[i], spbreaks[i]), xpd=T, type="l", lwd=0.4)
text(1.03, (spbreaks[i] + spbreaks[i+1]) / 2, xpd=T, pos=4, cex=0.8,
labels=paste(samdat$Genus[which(duplicated(samdat$Species)==F)][i], "\n",
samdat$Species[which(duplicated(samdat$Species)==F)][i], sep=""))
}
for (i in 1:nrow(samdat)) {
text(0, i-0.5, rownames(samdat)[i], xpd=T, cex=0.7, pos=2)
}
}
par(mfrow=c(1,1), mar=c(2, 1.5, 2, 10), lwd=0.1, cex=0.7, xpd=NA)
# Plot composition of 97% within-sample OTUs colored by clade
composition(phy.f.p, col=taxcolors[factor(data.frame(tax_table(phy.f.p))[order(data.frame(tax_table(phy.f.p))$Subtype), ]$Clade, levels=c("A","C","D"))], legend=T)
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
setwd("..Bioinf/fixed/")
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
setwd("..Bioinf/fixed/")
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
setwd("../Bioinf/fixed/")
getwd()
setwd("../Bioinf/fixed/")
setwd("~/Documents/Academia/HIMB/Moorea_Sym/Bioinf/fixed")
getwd()
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
setwd("~/Bioinf/fixed/")
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
setwd("/Users/jrcunning/Documents/Academia/HIMB/Moorea_Sym/Bioinf/fixed")
load("Moorea_sym.RData")  # loads phyloseq object named phy.f
# Filter OTUs by minimum count
# Set threshold count
n <- 10
# Identify OTUs below threshold count
taxa <- taxa_sums(phy.f)[which(taxa_sums(phy.f) >= n)]
# Remove taxa below threshold count
phy.f <- prune_taxa(names(taxa), phy.f)
# Filter samples by minimum count
# Set threshold number of reads
sn <- 100
# Remove samples with fewer reads than threshold
phy.f <- prune_samples(sample_sums(phy.f)>=sn, phy.f)
# Filter OTUs by minimum count again in case any dropped below threshold after filtering samples
# Identify OTUs below threshold count
taxa <- taxa_sums(phy.f)[which(taxa_sums(phy.f) >= n)]
# Remove taxa below threshold count
phy.f <- prune_taxa(names(taxa), phy.f)
# Label clades and subtypes for filtered phyloseq object tax_tables
get.st <- function(df) {
within(df, {
Clade <- substr(hit, 1, 1)
Subtype <- gsub(hit, pattern="_[A-Z]{2}[0-9]{6}", replacement="")
Subtype <- gsub(Subtype, pattern="_multiple", replacement="")
Subtype2 <- ifelse(as.numeric(sim)==100, paste0("'", Subtype, "'"),
paste0("'[", rep(rle(sort(Subtype))$values, times=rle(sort(Subtype))$lengths), "]'^",
unlist(lapply(rle(sort(Subtype))$lengths, seq_len)))[order(order(Subtype))])
#Subtype <- ifelse(as.numeric(sim)==100, Subtype, paste("*", Subtype, sep=""))
})
}
tax_table(phy.f) <- as.matrix(get.st(data.frame(tax_table(phy.f), stringsAsFactors=FALSE)))
# Convert to proportion (relative abundance)
phy.f.p <- transform_sample_counts(phy.f, function(x) x/sum(x))
# Apply transformation function
transform <- function(x) sqrt(x/sum(x))  # Set transformation function
phy.f.t <- transform_sample_counts(phy.f, transform)  # Transform data
setwd("/Users/jrcunning/Documents/Academia/HIMB/Moorea_Sym/Bioinf/fixed")
load("Moorea_sym.RData")
load("Moorea_sym.RData")
phy.f
otu_table(phy.f)
otu_table(phy.f)["101"]
otu_table(phy.f)[,"101"]
sort(otu_table(phy.f)[,"101"])
head(sort(otu_table(phy.f)[,"101"]))
head(order(otu_table(phy.f)[,"101"]))
head(sort(otu_table(phy.f)[,"101"]))
tail(sort(otu_table(phy.f)[,"101"]))
citation("DESeq2")
install.packages("DESeq2")
library(phyloseq)
taxcolors <- matrix(c("#8dd3c7", "#bebada", "#fb8072"),
dimnames=list(c("CladeA", "CladeC", "CladeD")))
options(stringsAsFactors = FALSE)
load("Data/Moorea_sym.RData")  # loads phyloseq object named phy.f
# Filter OTUs by minimum count
# Set threshold count
n <- 10
# Identify OTUs below threshold count
taxa <- taxa_sums(phy.f)[which(taxa_sums(phy.f) >= n)]
# Remove taxa below threshold count
phy.f <- prune_taxa(names(taxa), phy.f)
# Filter samples by minimum count
# Set threshold number of reads
sn <- 100
# Remove samples with fewer reads than threshold
phy.f <- prune_samples(sample_sums(phy.f)>=sn, phy.f)
# Filter OTUs by minimum count again in case any dropped below threshold after filtering samples
# Identify OTUs below threshold count
taxa <- taxa_sums(phy.f)[which(taxa_sums(phy.f) >= n)]
# Remove taxa below threshold count
phy.f <- prune_taxa(names(taxa), phy.f)
# Label clades and subtypes for filtered phyloseq object tax_tables
get.st <- function(df) {
within(df, {
Clade <- substr(hit, 1, 1)
Subtype <- gsub(hit, pattern="_[A-Z]{2}[0-9]{6}", replacement="")
Subtype <- gsub(Subtype, pattern="_multiple", replacement="")
Subtype2 <- ifelse(as.numeric(sim)==100, paste0("'", Subtype, "'"),
paste0("'[", rep(rle(sort(Subtype))$values, times=rle(sort(Subtype))$lengths), "]'^",
unlist(lapply(rle(sort(Subtype))$lengths, seq_len)))[order(order(Subtype))])
#Subtype <- ifelse(as.numeric(sim)==100, Subtype, paste("*", Subtype, sep=""))
})
}
tax_table(phy.f) <- as.matrix(get.st(data.frame(tax_table(phy.f), stringsAsFactors=FALSE)))
# Convert to proportion (relative abundance)
phy.f.p <- transform_sample_counts(phy.f, function(x) x/sum(x))
# Apply transformation function
transform <- function(x) sqrt(x/sum(x))  # Set transformation function
phy.f.t <- transform_sample_counts(phy.f, transform)  # Transform data
plot_bar(phy.f)
system("which blastn")
print("hello")
system('which blastn')
system("pwd")
system("which R")
system("which blastn")
system("blastn")
system("source ~/.bash_profile")
system("which blastn")
system("blastn")
system("oligotype")
system('source ~/.bash_profile')
system('which blastn')
>>>>>>> fb50dafa2bd19b5dca75f8e4d103c4baf4376fce
