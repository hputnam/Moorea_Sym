#working from Moorea_Sym

# In Make file after filtering add these
write.table(data.frame(tax_table(phy.f)), "tax_table.txt", row.names=T, quote=F)

#Bioinf/clust/all_rep_set_rep_set.fasta = seqs
#RAnalysis/Data/tax.table.txt = ISDs
#column 9 is clade ID
#awk '{print $1}' RAnalysis/Data/tax.table.txt = denovo name
#awk '{print $8}' RAnalysis/Data/tax.table.txt = clade name

#subset ID lists by clade
awk '$9 ~ /^A/{ print $1; }' RAnalysis/Data/tax.table.txt > RAnalysis/Data/A_tree_seq.ids
awk '$9 ~ /^C/{ print $1; }' RAnalysis/Data/tax.table.txt > RAnalysis/Data/C_tree_seq.ids
awk '$9 ~ /^D/{ print $1; }' RAnalysis/Data/tax.table.txt > RAnalysis/Data/D_tree_seq.ids

#Run MACQIIME
source /macqiime/configs/bash_profile.txt

#filter seqs by id list
filter_fasta.py -f Bioinf/clust/all_rep_set_rep_set.fasta -s RAnalysis/Data/A_tree_seq.ids -o RAnalysis/Data/A_tree_seqs.fasta
filter_fasta.py -f Bioinf/clust/all_rep_set_rep_set.fasta -s RAnalysis/Data/C_tree_seq.ids -o RAnalysis/Data/C_tree_seqs.fasta
filter_fasta.py -f Bioinf/clust/all_rep_set_rep_set.fasta -s RAnalysis/Data/D_tree_seq.ids -o RAnalysis/Data/D_tree_seqs.fasta

#check seq number
grep -c ">" RAnalysis/Data/A_tree_seqs.fasta
grep -c ">" RAnalysis/Data/C_tree_seqs.fasta
grep -c ">" RAnalysis/Data/D_tree_seqs.fasta

#align fasta files for each clade
align_seqs.py -i RAnalysis/Data/A_tree_seqs.fasta -m muscle -o RAnalysis/Data/
align_seqs.py -i RAnalysis/Data/C_tree_seqs.fasta -m muscle -o RAnalysis/Data/
align_seqs.py -i RAnalysis/Data/D_tree_seqs.fasta -m muscle -o RAnalysis/Data/

#remove extra header info from alignments
sed 's/ .*//' RAnalysis/Data/A_tree_seqs_aligned.fasta > RAnalysis/Data/A_tree_seqs_aligned_clean.fasta
sed 's/ .*//' RAnalysis/Data/C_tree_seqs_aligned.fasta > RAnalysis/Data/C_tree_seqs_aligned_clean.fasta
sed 's/ .*//' RAnalysis/Data/D_tree_seqs_aligned.fasta > RAnalysis/Data/D_tree_seqs_aligned_clean.fasta







#convert otu table to biom format
https://www.bioconductor.org/packages/release/bioc/html/biomformat.html

# in R
write.delim(data.frame(otu_table(phy.f)), "otu_table.tsv", quote = FALSE, row.names = T, sep = "\t")

#in QIIME
biom convert -i RAnalysis/Data/otu_table.tsv -o RAnalysis/Data/otu_table.biom --to-hdf5 --table-type="OTU table"

#in bash
nano RAnalysis/Data/otu_table.tsv 
#add OTU tab

beta_diversity.py -i RAnalysis/Data/otu_table.biom -t RAnalysis/Data/uber.tre -m weighted_unifrac -o RAnalysis/Data/ 
